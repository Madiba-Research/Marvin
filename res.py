import sqlite3
con = sqlite3.connect('res.db')




channels = {"http": "Regular HTTP", "http_crypt": "Encrypted Over HTTP", "https": "Regular HTTPS", "https_crypt": "Encrypted Over HTTPS",
            "non_http_packets": "Regular Non-HTTP", "non_http_crypt": "Encrypted Over Non-HTTP", "file": "Shared Storage", "file_crypt": "Encrypted Shared Storage"}

weak_alg_hash = {"RSA\-761": "alg like \"%rsa%\" and length(cryptKey) == 168", "RSA\-512": "alg like \"%rsa%\" and (length(cryptKey) == 124 or length(cryptKey) ==128)", "RSA\-384": "alg like \"%rsa%\" and length(cryptKey) == 104", "DES": "alg like \"%des%\" and alg not like \"%DESede%\" and alg not like \"%PBEWithMD5AndDES%\"",
                 "DESede": "alg like \"%DESede%\"", "PBE-MD5-DES": "alg like \"%PBEWithMD5AndDES%\"", "rc4": "alg like \"%rc4%\"", "EBC": "alg like \"%/ecb%\""}

deviceInfo = "('operator','model','locale','device-id','displayid','resolution','device','timezone','device-email','abi','fingerprint','cpu','bootloader','dummy0','adid','installed_packages','gsf_id')"
interactionInfo = "('name','mypassword','search','email','mobile','mobile2','pid')"
locationInfo = "('~mylon','mylon','~mylat','mylon3','mylat3','mylat','img-lat','wifi-bssid','other-wifi-bssid')"
networkInfo = "('dummy0','other-wifi-bssid','other-wifi','GatewayIPAddr','wifi-essid','wifi-bssid','wifi-ip','wifi-mac','wifi-ip6','ProxyIPAddr','fe80-word')"
contactInfo = "('contactname','contactnumber','smsnumber','sms')"

cur = con.cursor()
cur.execute("""select (select count(DISTINCT pkg) from apps),(select count(DISTINCT pkg) from (select distinct pkg from leaks union select DISTINCT pkg from raw_crypts)),(select count(DISTINCT pkg) from raw_crypts),(select count(DISTINCT pkg) from raw_crypts where origin !="everything");""")
total_apps, sucessfull_apps,total_crypt_apps,identified_crypt= cur.fetchone()

print('\\newcommand{\VarSuccessFullDownloadApps}{'+str(total_apps)+"}")
print('\\newcommand{\VarSuccessfullyAnalyzed}{'+str(sucessfull_apps)+"}")
print('\\newcommand{\VarAppsUsedCryptographicAPI}{'+str(total_crypt_apps)+"}")
print('\\newcommand{\VarAppsUsedIdentifiedCryptographicAPI}{'+str(identified_crypt)+"}")



cur.execute("select count(distinct pkg) from leaks where alg like '%RSA%' and pkg not in (select distinct pkg from leaks where alg not like '%RSA%' and (stage == 1 or stage == 2));")
print('\\newcommand{\VarAppsOnlyPKI}{'+str(cur.fetchone()[0])+"}")
cur.execute("select count(distinct pkg) from leaks where alg like '%RSA%' and pkg in (select distinct pkg from leaks where alg not like '%RSA%' and (stage == 1 or stage == 2));")
print('\\newcommand{\VarAppsPKIAndSymmetric}{'+str(cur.fetchone()[0])+"}")
cur.execute("select count(distinct pkg) from leaks where (stage == 1 or stage == 2) and pkg not in (select distinct pkg from leaks where alg like '%RSA%' and (stage == 1 or stage == 2));")
print('\\newcommand{\VarAppsOnlySymmetric}{'+str(cur.fetchone()[0])+"}")
cur.execute("select count(distinct pkg) from leaks where is_3rd == true;")
print('\\newcommand{\VarAppsUseThirdParty}{'+str(cur.fetchone()[0])+"}")
cur.execute("select count(distinct pkg) from leaks where channel == 'file_crypt';")
print('\\newcommand{\VarAppsSharedFileEncrypt}{'+str(cur.fetchone()[0])+"}")
cur.execute("select count(distinct pkg) from leaks where channel not like '%file%' and channel like '%crypt%';")
print('\\newcommand{\VarAppsNetworkEncrypt}{'+str(cur.fetchone()[0])+"}")
cur.execute("select count(distinct pkg) from leaks where channel like 'https_crypt';")
print('\\newcommand{\VarAppsNetworkEncryptHTTPS}{'+str(cur.fetchone()[0])+"}")
cur.execute("select count(distinct pkg) from leaks where channel like 'http_crypt';")
print('\\newcommand{\VarAppsNetworkEncryptHTTP}{'+str(cur.fetchone()[0])+"}")
cur.execute("select count(distinct pkg) from leaks where channel like 'non_http_crypt';")
print('\\newcommand{\VarAppsNetworkEncryptNONHTTP}{'+str(cur.fetchone()[0])+"}")
cur.execute("select count(DISTINCT pkg) from leaks where  (stage == 1 or stage == 2) and item in ('operator','model','locale','device-id','displayid','resolution','device','timezone','device-email','abi','fingerprint','cpu','bootloader','dummy0','adid','installed_packages');")
print('\\newcommand{\VarAppsTransmitDeviceInfo}{'+str(cur.fetchone()[0])+"}")
cur.execute("select count(DISTINCT pkg) from leaks where  (stage == 1 or stage == 2) and item in ('name','password','search','email','mobile','mobile2','pid');")
print('\\newcommand{\VarAppsTransmitInteractionInfo}{'+str(cur.fetchone()[0])+"}")
cur.execute("select count(DISTINCT pkg) from leaks where  (stage == 1 or stage == 2) and item in ('~lon','lon','~lat','lon3','lat3','lat','img-lat','wifi-bssid','other-wifi-bssid');")
print('\\newcommand{\VarAppsTransmitNetworkInfo}{'+str(cur.fetchone()[0])+"}")
cur.execute("select count(DISTINCT pkg) from leaks where  (stage == 1 or stage == 2) and item in ('dummy0','other-wifi-bssid','other-wifi','GatewayIPAddr','wifi-essid','wifi-bssid','wifi-ip','wifi-mac','wifi-ip6','ProxyIPAddr','fe80-word');")
print('\\newcommand{\VarAppsTransmitGEOInfo}{'+str(cur.fetchone()[0])+"}")
cur.execute("select count(DISTINCT pkg) from leaks where  (stage == 1 or stage == 2) and item in ('contactname','contactnumber','smsnumber','sms');")
print('\\newcommand{\VarAppsTransmitContactInfo}{'+str(cur.fetchone()[0])+"}")
cur.execute("select count(DISTINCT addr) from leaks where  (stage == 1 or stage == 2);")
print('\\newcommand{\VarAppsCryptDest}{'+str(cur.fetchone()[0])+"}")



k_network = ""
k_files = ""
for (ch, ch_name) in channels.items():
    table = ch_name
    cur.execute("select count(DISTINCT pkg) from leaks where "+("(stage == 1 or stage == 2) and" if "crypt" in ch else "") +
                " (item like \"%key|%\" or item like \"%iv|%\") and send == true and channel = \"{}\";".format(ch))
    _fetch = cur.fetchone()[0]
    table += "&"+str(_fetch)+("{\color{Blue} "+"{:.2f}".format((_fetch/total_crypt_apps)*100)+"} {\color{Green} "+"{:.2f}".format((_fetch/identified_crypt)
      * 100)+"}" if "crypt" in ch else "{\color{Green} "+"{:.2f}".format((_fetch/sucessfull_apps)*100)+"}")
      
    cur.execute("select count(DISTINCT pkg) from leaks where "+("(stage == 1 or stage == 2) and" if "crypt" in ch else "") +
                " (item like \"%key|%\" or item like \"%iv|%\") and send == false and channel = \"{}\";".format(ch))
    _fetch = cur.fetchone()[0]
    table += "&"+str(_fetch)+("{\color{Blue} "+"{:.2f}".format((_fetch/total_crypt_apps)*100)+"} {\color{Green} "+"{:.2f}".format((_fetch/identified_crypt)
      * 100)+"}" if "crypt" in ch else "{\color{Green} "+"{:.2f}".format((_fetch/sucessfull_apps)*100)+"}")+"\\\\\n"
    if "file" in ch:
        k_files += table
    else:
        k_network += table
print('\\newcommand{\VarCommunicationKeyExchangeNet}{'+str(k_network)+"}")
print('\\newcommand{\VarCommunicationKeyExchangeFile}{'+str(k_files)+"}")


network = ""
files = ""
for (ch, ch_name) in channels.items():
    table = ch_name+"&"
    cur.execute("select count(DISTINCT pkg) from leaks where "+("(stage == 1 or stage == 2) and" if "crypt" in ch else "") +
                " item in {0} and channel = \"{1}\";".format(deviceInfo, ch))
    _fetch = cur.fetchone()[0]
    table += str(_fetch)+("{\color{Blue} "+"{:.2f}".format((_fetch/total_crypt_apps)*100)+"} {\color{Green} "+"{:.2f}".format((_fetch/identified_crypt)
      * 100)+"}" if "crypt" in ch else "{\color{Green} "+"{:.2f}".format((_fetch/sucessfull_apps)*100)+"}")

    cur.execute("select count(DISTINCT pkg) from leaks where "+("(stage == 1 or stage == 2) and" if "crypt" in ch else "") +
                " item in {0} and channel = \"{1}\";".format(interactionInfo, ch))
    _fetch = cur.fetchone()[0]
    table += "&"+str(_fetch)+("{\color{Blue} "+"{:.2f}".format((_fetch/total_crypt_apps)*100)+"} {\color{Green} "+"{:.2f}".format((_fetch/identified_crypt)
      * 100)+"}" if "crypt" in ch else "{\color{Green} "+"{:.2f}".format((_fetch/sucessfull_apps)*100)+"}")
    
    
    cur.execute("select count(DISTINCT pkg) from leaks where "+("(stage == 1 or stage == 2) and" if "crypt" in ch else "") +
                " item in {0} and channel = \"{1}\";".format(locationInfo, ch))
    _fetch = cur.fetchone()[0]
    table += "&"+str(_fetch)+("{\color{Blue} "+"{:.2f}".format((_fetch/total_crypt_apps)*100)+"} {\color{Green} "+"{:.2f}".format((_fetch/identified_crypt)
      * 100)+"}" if "crypt" in ch else "{\color{Green} "+"{:.2f}".format((_fetch/sucessfull_apps)*100)+"}")
    
    cur.execute("select count(DISTINCT pkg) from leaks where "+("(stage == 1 or stage == 2) and" if "crypt" in ch else "") +
                " item in {0}  and channel = \"{1}\";".format(networkInfo, ch))
    _fetch = cur.fetchone()[0]
    table += "&"+str(_fetch)+("{\color{Blue} "+"{:.2f}".format((_fetch/total_crypt_apps)*100)+"} {\color{Green} "+"{:.2f}".format((_fetch/identified_crypt)
      * 100)+"}" if "crypt" in ch else "{\color{Green} "+"{:.2f}".format((_fetch/sucessfull_apps)*100)+"}")

    cur.execute("select count(DISTINCT pkg) from leaks where "+("(stage == 1 or stage == 2) and" if "crypt" in ch else "") +
                " (item like \"%key|%\" or item like \"%iv|%\") and channel = \"{}\";".format(ch))
    _fetch = cur.fetchone()[0]
    table += "&"+str(_fetch)+("{\color{Blue} "+"{:.2f}".format((_fetch/total_crypt_apps)*100)+"} {\color{Green} "+"{:.2f}".format((_fetch/identified_crypt)
      * 100)+"}" if "crypt" in ch else "{\color{Green} "+"{:.2f}".format((_fetch/sucessfull_apps)*100)+"}")

    cur.execute("select count(DISTINCT pkg) from leaks where "+("(stage == 1 or stage == 2) and" if "crypt" in ch else "") +
                " item in {0} and channel = \"{1}\";".format(contactInfo, ch))
    
    _fetch = cur.fetchone()[0]
    table += "&"+str(_fetch)+("{\color{Blue} "+"{:.2f}".format((_fetch/total_crypt_apps)*100)+"} {\color{Green} "+"{:.2f}".format((_fetch/identified_crypt)
      * 100)+"}" if "crypt" in ch else "{\color{Green} "+"{:.2f}".format((_fetch/sucessfull_apps)*100)+"}")

    if ch.endswith("_crypt"):
      cur.execute("""select count(distinct pkg) from raw_crypts where binwalk not null and binwalk not like "%Ubiquiti%" and binwalk not like "%VMware4%" and binwalk not like "%RTOS%" and binwalk not like "%StuffIt%" and binwalk not like "%TROC%" and binwalk not like "%Broadcom%" and binwalk not like "%GIF%" and binwalk not like "%Sega%" and binwalk not like "%Copyright%" and binwalk not like "Neighborly" and binwalk not like "Unix" and origin == \"{0}\";""".format(ch[:-6]))
      _fetch = cur.fetchone()[0]
      table += "&"+str(_fetch)+("{\color{Blue} "+"{:.2f}".format((_fetch/total_crypt_apps)*100)+"} {\color{Green} "+"{:.2f}".format((_fetch/identified_crypt)
      * 100)+"}" if "crypt" in ch else "{\color{Green} "+"{:.2f}".format((_fetch/sucessfull_apps)*100)+"}")+"\\\\\n"

    else:
      table += "&-\\\\\n"
    
    if "file" in ch:
        files += table
    else:
        network += table
print('\\newcommand{\VarCommunicationContentTableNet}{'+str(network)+"}")
print('\\newcommand{\VarCommunicationContentTableFile}{'+str(files)+"}")





# network = ""
# files = ""
# for (ch, ch_name) in channels.items():
#     table = ch_name+"&"
#     cur.execute("select count(DISTINCT pkg) from leaks where "+("(stage == 1 or stage == 2) and" if "crypt" in ch else "") +
#                 " item in {0} and send == true and channel = \"{1}\";".format(deviceInfo, ch))

#     _fetch = cur.fetchone()[0]
#     table += str(_fetch)+("{\color{Blue} "+"{:.2f}".format((_fetch/total_crypt_apps)*100)+"} {\color{Green} "+"{:.2f}".format((_fetch/identified_crypt)
#       * 100)+"}" if "crypt" in ch else "{\color{Green} "+"{:.2f}".format((_fetch/sucessfull_apps)*100)+"}")
#     cur.execute("select count(DISTINCT pkg) from leaks where "+("(stage == 1 or stage == 2) and" if "crypt" in ch else "") +
#                 " item in {0} and send == false and channel = \"{1}\";".format(deviceInfo, ch))
#     _fetch = cur.fetchone()[0]
#     table += "&"+str(_fetch)+("{\color{Blue} "+"{:.2f}".format((_fetch/total_crypt_apps)*100)+"} {\color{Green} "+"{:.2f}".format((_fetch/identified_crypt)
#       * 100)+"}" if "crypt" in ch else "{\color{Green} "+"{:.2f}".format((_fetch/sucessfull_apps)*100)+"}")
#     cur.execute("select count(DISTINCT pkg) from leaks where "+("(stage == 1 or stage == 2) and" if "crypt" in ch else "") +
#                 " item in {0} and send == true and channel = \"{1}\";".format(interactionInfo, ch))
#     _fetch = cur.fetchone()[0]
#     table += "&"+str(_fetch)+("{\color{Blue} "+"{:.2f}".format((_fetch/total_crypt_apps)*100)+"} {\color{Green} "+"{:.2f}".format((_fetch/identified_crypt)
#       * 100)+"}" if "crypt" in ch else "{\color{Green} "+"{:.2f}".format((_fetch/sucessfull_apps)*100)+"}")
#     cur.execute("select count(DISTINCT pkg) from leaks where "+("(stage == 1 or stage == 2) and" if "crypt" in ch else "") +
#                 " item in {0} and send == false and channel = \"{1}\";".format(interactionInfo, ch))
#     _fetch = cur.fetchone()[0]
#     table += "&"+str(_fetch)+("{\color{Blue} "+"{:.2f}".format((_fetch/total_crypt_apps)*100)+"} {\color{Green} "+"{:.2f}".format((_fetch/identified_crypt)
#       * 100)+"}" if "crypt" in ch else "{\color{Green} "+"{:.2f}".format((_fetch/sucessfull_apps)*100)+"}")
#     cur.execute("select count(DISTINCT pkg) from leaks where "+("(stage == 1 or stage == 2) and" if "crypt" in ch else "") +
#                 " item in {0} and send == true and channel = \"{1}\";".format(locationInfo, ch))
#     _fetch = cur.fetchone()[0]
#     table += "&"+str(_fetch)+("{\color{Blue} "+"{:.2f}".format((_fetch/total_crypt_apps)*100)+"} {\color{Green} "+"{:.2f}".format((_fetch/identified_crypt)
#       * 100)+"}" if "crypt" in ch else "{\color{Green} "+"{:.2f}".format((_fetch/sucessfull_apps)*100)+"}")
#     cur.execute("select count(DISTINCT pkg) from leaks where "+("(stage == 1 or stage == 2) and" if "crypt" in ch else "") +
#                 " item in {0} and send == false and channel = \"{1}\";".format(locationInfo, ch))
#     _fetch = cur.fetchone()[0]
#     table += "&"+str(_fetch)+("{\color{Blue} "+"{:.2f}".format((_fetch/total_crypt_apps)*100)+"} {\color{Green} "+"{:.2f}".format((_fetch/identified_crypt)
#       * 100)+"}" if "crypt" in ch else "{\color{Green} "+"{:.2f}".format((_fetch/sucessfull_apps)*100)+"}")
#     cur.execute("select count(DISTINCT pkg) from leaks where "+("(stage == 1 or stage == 2) and" if "crypt" in ch else "") +
#                 " item in {0} and send == true and channel = \"{1}\";".format(networkInfo, ch))
#     _fetch = cur.fetchone()[0]
#     table += "&"+str(_fetch)+("{\color{Blue} "+"{:.2f}".format((_fetch/total_crypt_apps)*100)+"} {\color{Green} "+"{:.2f}".format((_fetch/identified_crypt)
#       * 100)+"}" if "crypt" in ch else "{\color{Green} "+"{:.2f}".format((_fetch/sucessfull_apps)*100)+"}")
#     cur.execute("select count(DISTINCT pkg) from leaks where "+("(stage == 1 or stage == 2) and" if "crypt" in ch else "") +
#                 " item in {0} and send == false and channel = \"{1}\";".format(networkInfo, ch))
#     _fetch = cur.fetchone()[0]
#     table += "&"+str(_fetch)+("{\color{Blue} "+"{:.2f}".format((_fetch/total_crypt_apps)*100)+"} {\color{Green} "+"{:.2f}".format((_fetch/identified_crypt)
#       * 100)+"}" if "crypt" in ch else "{\color{Green} "+"{:.2f}".format((_fetch/sucessfull_apps)*100)+"}")

#     cur.execute("select count(DISTINCT pkg) from leaks where "+("(stage == 1 or stage == 2) and" if "crypt" in ch else "") +
#                 " (item like \"%key|%\" or item like \"%iv|%\") and send == true and channel = \"{}\";".format(ch))
#     _fetch = cur.fetchone()[0]
#     table += "&"+str(_fetch)+("{\color{Blue} "+"{:.2f}".format((_fetch/total_crypt_apps)*100)+"} {\color{Green} "+"{:.2f}".format((_fetch/identified_crypt)
#       * 100)+"}" if "crypt" in ch else "{\color{Green} "+"{:.2f}".format((_fetch/sucessfull_apps)*100)+"}")
#     cur.execute("select count(DISTINCT pkg) from leaks where "+("(stage == 1 or stage == 2) and" if "crypt" in ch else "") +
#                 " (item like \"%key|%\" or item like \"%iv|%\") and send == false and channel = \"{}\";".format(ch))
#     _fetch = cur.fetchone()[0]
#     table += "&"+str(_fetch)+("{\color{Blue} "+"{:.2f}".format((_fetch/total_crypt_apps)*100)+"} {\color{Green} "+"{:.2f}".format((_fetch/identified_crypt)
#       * 100)+"}" if "crypt" in ch else "{\color{Green} "+"{:.2f}".format((_fetch/sucessfull_apps)*100)+"}")

#     cur.execute("select count(DISTINCT pkg) from leaks where "+("(stage == 1 or stage == 2) and" if "crypt" in ch else "") +
#                 " item in {0} and send == true and channel = \"{1}\";".format(contactInfo, ch))
#     _fetch = cur.fetchone()[0]
#     table += "&"+str(_fetch)+("{\color{Blue} "+"{:.2f}".format((_fetch/total_crypt_apps)*100)+"} {\color{Green} "+"{:.2f}".format((_fetch/identified_crypt)
#       * 100)+"}" if "crypt" in ch else "{\color{Green} "+"{:.2f}".format((_fetch/sucessfull_apps)*100)+"}")
#     cur.execute("select count(DISTINCT pkg) from leaks where "+("(stage == 1 or stage == 2) and" if "crypt" in ch else "") +
#                 " item in {0} and send == false and channel = \"{1}\";".format(contactInfo, ch))
#     _fetch = cur.fetchone()[0]
#     table += "&"+str(_fetch)+("{\color{Blue} "+"{:.2f}".format((_fetch/total_crypt_apps)*100)+"} {\color{Green} "+"{:.2f}".format((_fetch/identified_crypt)
#       * 100)+"}" if "crypt" in ch else "{\color{Green} "+"{:.2f}".format((_fetch/sucessfull_apps)*100)+"}")+"&0&0\\\\\n"
#     if "file" in ch:
#         files += table
#     else:
#         network += table
# print('\\newcommand{\VarCommunicationContentTableNet}{'+str(network)+"}")
# print('\\newcommand{\VarCommunicationContentTableFile}{'+str(files)+"}")

# cur.execute("""select (select count(distinct pkg) from (select distinct pkg from leaks where channel !='file_buffer_crypt' and alg like  "%rsa%" and length(cryptKey) == 168 union select distinct pkg from raw_crypts where origin !='everything' and origin !='file_buffer' and alg like "%rsa%" and length(cryptKey) == 168)),(select count(distinct pkg) from (select distinct pkg from leaks where channel !='file_buffer_crypt' and alg like  "%rsa%" and length(cryptKey) == 124 or length(cryptKey) ==128 union select distinct pkg from raw_crypts where origin !='everything' and origin !='file_buffer' and alg like "%rsa%" and length(cryptKey) == 124 or length(cryptKey) ==128)),(select count(distinct pkg) from (select distinct pkg from leaks where channel !='file_buffer_crypt' and alg like  "%rsa%" and length(cryptKey) == 104 union select distinct pkg from raw_crypts where origin !='everything' and origin !='file_buffer' and alg like "%rsa%" and length(cryptKey) == 104)),(select count(distinct pkg) from (select distinct pkg from leaks where channel !='file_buffer_crypt' and alg like  "%des%" and alg not like "%DESede%" and alg not like "%PBEWithMD5AndDES%" union select distinct pkg from raw_crypts where origin !='everything' and origin !='file_buffer' and alg like "%des%" and alg not like "%DESede%" and alg not like "%PBEWithMD5AndDES%")),(select count(distinct pkg) from (select distinct pkg from leaks where channel !='file_buffer_crypt' and alg like  "%DESede%" union select distinct pkg from raw_crypts where origin !='everything' and origin !='file_buffer' and alg like "%DESede%")),(select count(distinct pkg) from (select distinct pkg from leaks where channel !='file_buffer_crypt' and alg like  "%rc4%" union select distinct pkg from leaks where channel !='file_buffer_crypt' and alg like  "%rc4%")),(select count(distinct pkg) from (select distinct pkg from leaks where channel !='file_buffer_crypt' and alg like  "%PBEWithMD5AndDES%" union select distinct pkg from raw_crypts where origin !='everything' and origin !='file_buffer' and alg like "%PBEWithMD5AndDES%")),(select count(distinct pkg) from (select distinct pkg from leaks where channel !='file_buffer_crypt' and alg like  "%/ecb%" union select distinct pkg from raw_crypts where origin !='everything' and origin !='file_buffer' and alg like "%/ecb%"))""")
# (rsa761,rsa512,rsa384,des,desede,rc4,pBEWithMD5AndDES,ecb) = cur.fetchone()
# print('\\newcommand{\AllAppsRSASevenSixOne}{'+str(rsa761)+"}")
# print('\\newcommand{\AllAppsRSAFiveOneTwo}{'+str(rsa512)+"}")
# print('\\newcommand{\AllAppsRSAThreeEightFour}{'+str(rsa384)+"}")
# print('\\newcommand{\AllAppsDES}{'+str(des)+"}")
# print('\\newcommand{\AllAppsDESede}{'+str(desede)+"}")
# print('\\newcommand{\AllAppsRCFour}{'+str(rc4)+"}")
# print('\\newcommand{\AllAppspBEWithMDFiveAndDES}{'+str(pBEWithMD5AndDES)+"}")
# print('\\newcommand{\AllAppsECB}{'+str(ecb)+"}")

# weak_alg = ""
# for name, alg_cond in weak_alg_hash.items():
#     # print("""select (select count(distinct pkg) from (select distinct pkg from leaks where channel = 'http' and {0} union select distinct pkg from raw_crypts where origin = 'http' and {0})),(select count(distinct pkg) from (select distinct pkg from leaks where channel = 'https' and {0} union select distinct pkg from raw_crypts where origin = 'https' and {0})),(select count(distinct pkg) from (select distinct pkg from leaks where channel = 'non_http' and {0} union select distinct pkg from raw_crypts where origin = 'non_http' and {0})),(select count(distinct pkg) from (select distinct pkg from leaks where channel = 'file' and {0} union select distinct pkg from raw_crypts where origin = 'file' and {0}));""".format(alg_cond))
#     cur.execute("""select (select count(distinct pkg) from (select distinct pkg from leaks where channel = 'http_crypt' and {0} union select distinct pkg from raw_crypts where origin = 'http' and {0})),(select count(distinct pkg) from (select distinct pkg from leaks where channel = 'https_crypt' and {0} union select distinct pkg from raw_crypts where origin = 'https' and {0})),(select count(distinct pkg) from (select distinct pkg from leaks where channel = 'non_http_crypt' and {0} union select distinct pkg from raw_crypts where origin = 'non_http' and {0})),(select count(distinct pkg) from (select distinct pkg from leaks where channel = 'file_crypt' and {0} union select distinct pkg from raw_crypts where origin = 'file' and {0}));""".format(alg_cond))
#     weak_alg+=('{1}& {0[0]}& {0[1]}& {0[2]}& {0[3]}\\\\'.format(cur.fetchone(),name))
# print('\\newcommand{\VarTableAppsWeakCipher}{'+weak_alg+"}")

cur.execute("select (select count(distinct pkg) from leaks where alg like \"%rsa%\" and length(cryptKey) == 168), (select count(distinct pkg) from leaks where alg like \"%rsa%\" and length(cryptKey) == 124 or length(cryptKey) ==128),(select count(distinct pkg) from leaks where alg like \"%rsa%\" and length(cryptKey) == 104),(select count(distinct pkg) from leaks where alg like \"%des%\" and alg not like \"%DESede%\" and alg not like \"%PBEWithMD5AndDES%\"),(select count(distinct pkg) from leaks where alg like \"%DESede%\"),(select count(distinct pkg) from leaks where alg like \"%rc4%\"),(select count(distinct pkg) from leaks where alg like \"%PBEWithMD5AndDES%\"),(select count(distinct pkg) from leaks where alg like \"%/ecb%\")")
(rsa761,rsa512,rsa384,des,desede,rc4,pBEWithMD5AndDES,ecb) = cur.fetchone()
print('\\newcommand{\AllAppsRSASevenSixOne}{'+str(rsa761)+"}")
print('\\newcommand{\AllAppsRSAFiveOneTwo}{'+str(rsa512)+"}")
print('\\newcommand{\AllAppsRSAThreeEightFour}{'+str(rsa384)+"}")
print('\\newcommand{\AllAppsDES}{'+str(des)+"}")
print('\\newcommand{\AllAppsDESede}{'+str(desede)+"}")
print('\\newcommand{\AllAppsRCFour}{'+str(rc4)+"}")
print('\\newcommand{\AllAppspBEWithMDFiveAndDES}{'+str(pBEWithMD5AndDES)+"}")
print('\\newcommand{\AllAppsECB}{'+str(ecb)+"}")

weak_alg = ""
for name, alg_cond in weak_alg_hash.items():
    cur.execute("""select (select count(distinct pkg) from leaks where channel like '%http%' and channel not like '%https%' and {0}),(select count(distinct pkg) from leaks where channel like '%https%' and {0}),(select count(distinct pkg) from leaks where channel like '%non_http%' and {0}),(select count(distinct pkg) from leaks where channel like '%file%' and {0});""".format(alg_cond))
    weak_alg+=('{1}& {0[0]}& {0[1]}& {0[2]}& {0[3]}\\\\'.format(cur.fetchone(),name))
print('\\newcommand{\VarTableAppsWeakCipher}{'+weak_alg+"}")

fixed_keys = ""
cur.execute("""select (select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device != s2.device and (s1.cryptKey == s2.cryptKey or s1.cryptKey in (select item from hard_keys where type='key' and pkg == s1.pkg)) and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel=='https_crypt' and cryptKey!='' and  item in {0}),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device == s2.device and (s1.cryptKey == s2.cryptKey or s1.cryptKey in (select item from hard_keys where type='key' and pkg == s1.pkg)) and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel=='https_crypt' and cryptKey!='' and  item in {0}),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device != s2.device and (s1.cryptKey == s2.cryptKey or s1.cryptKey in (select item from hard_keys where type='key' and pkg == s1.pkg)) and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel=='http_crypt' and cryptKey!='' and  item in {0}),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device == s2.device and (s1.cryptKey == s2.cryptKey or s1.cryptKey in (select item from hard_keys where type='key' and pkg == s1.pkg)) and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel=='http_crypt' and cryptKey!='' and  item in {0}),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device != s2.device and (s1.cryptKey == s2.cryptKey or s1.cryptKey in (select item from hard_keys where type='key' and pkg == s1.pkg)) and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel like '%non_http%' and cryptKey!='' and  item in {0}),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device == s2.device and (s1.cryptKey == s2.cryptKey or s1.cryptKey in (select item from hard_keys where type='key' and pkg == s1.pkg)) and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel like '%non_http%' and cryptKey!='' and  item in {0}),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device != s2.device and (s1.cryptKey == s2.cryptKey or s1.cryptKey in (select item from hard_keys where type='key' and pkg == s1.pkg)) and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel like '%file_crypt%' and cryptKey!='' and  item in {0}),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device == s2.device and (s1.cryptKey == s2.cryptKey or s1.cryptKey in (select item from hard_keys where type='key' and pkg == s1.pkg)) and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel like '%file_crypt%' and cryptKey!='' and  item in {0});""".format(deviceInfo))
fixed_keys+=('Tracking& {0[0]}& {0[1]}& {0[2]}& {0[3]} & {0[4]}& {0[5]}& {0[6]}& {0[7]}\\\\'.format(cur.fetchone()))
cur.execute("""select (select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device != s2.device and (s1.cryptKey == s2.cryptKey or s1.cryptKey in (select item from hard_keys where type='key' and pkg == s1.pkg)) and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel=='https_crypt' and cryptKey!='' and  item in {0}),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device == s2.device and (s1.cryptKey == s2.cryptKey or s1.cryptKey in (select item from hard_keys where type='key' and pkg == s1.pkg)) and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel=='https_crypt' and cryptKey!='' and  item in {0}),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device != s2.device and (s1.cryptKey == s2.cryptKey or s1.cryptKey in (select item from hard_keys where type='key' and pkg == s1.pkg)) and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel=='http_crypt' and cryptKey!='' and  item in {0}),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device == s2.device and (s1.cryptKey == s2.cryptKey or s1.cryptKey in (select item from hard_keys where type='key' and pkg == s1.pkg)) and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel=='http_crypt' and cryptKey!='' and  item in {0}),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device != s2.device and (s1.cryptKey == s2.cryptKey or s1.cryptKey in (select item from hard_keys where type='key' and pkg == s1.pkg)) and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel like '%non_http%' and cryptKey!='' and  item in {0}),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device == s2.device and (s1.cryptKey == s2.cryptKey or s1.cryptKey in (select item from hard_keys where type='key' and pkg == s1.pkg)) and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel like '%non_http%' and cryptKey!='' and  item in {0}),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device != s2.device and (s1.cryptKey == s2.cryptKey or s1.cryptKey in (select item from hard_keys where type='key' and pkg == s1.pkg)) and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel like '%file_crypt%' and cryptKey!='' and  item in {0}),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device == s2.device and (s1.cryptKey == s2.cryptKey or s1.cryptKey in (select item from hard_keys where type='key' and pkg == s1.pkg)) and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel like '%file_crypt%' and cryptKey!='' and  item in {0});""".format(interactionInfo))
fixed_keys+=('Inputs& {0[0]}& {0[1]}& {0[2]}& {0[3]} & {0[4]}& {0[5]}& {0[6]}& {0[7]}\\\\'.format(cur.fetchone()))
cur.execute("""select (select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device != s2.device and (s1.cryptKey == s2.cryptKey or s1.cryptKey in (select item from hard_keys where type='key' and pkg == s1.pkg)) and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel=='https_crypt' and cryptKey!='' and  item in {0}),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device == s2.device and (s1.cryptKey == s2.cryptKey or s1.cryptKey in (select item from hard_keys where type='key' and pkg == s1.pkg)) and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel=='https_crypt' and cryptKey!='' and  item in {0}),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device != s2.device and (s1.cryptKey == s2.cryptKey or s1.cryptKey in (select item from hard_keys where type='key' and pkg == s1.pkg)) and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel=='http_crypt' and cryptKey!='' and  item in {0}),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device == s2.device and (s1.cryptKey == s2.cryptKey or s1.cryptKey in (select item from hard_keys where type='key' and pkg == s1.pkg)) and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel=='http_crypt' and cryptKey!='' and  item in {0}),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device != s2.device and (s1.cryptKey == s2.cryptKey or s1.cryptKey in (select item from hard_keys where type='key' and pkg == s1.pkg)) and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel like '%non_http%' and cryptKey!='' and  item in {0}),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device == s2.device and (s1.cryptKey == s2.cryptKey or s1.cryptKey in (select item from hard_keys where type='key' and pkg == s1.pkg)) and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel like '%non_http%' and cryptKey!='' and  item in {0}),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device != s2.device and (s1.cryptKey == s2.cryptKey or s1.cryptKey in (select item from hard_keys where type='key' and pkg == s1.pkg)) and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel like '%file_crypt%' and cryptKey!='' and  item in {0}),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device == s2.device and (s1.cryptKey == s2.cryptKey or s1.cryptKey in (select item from hard_keys where type='key' and pkg == s1.pkg)) and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel like '%file_crypt%' and cryptKey!='' and  item in {0});""".format(locationInfo))
fixed_keys+=('Geolocation& {0[0]}& {0[1]}& {0[2]}& {0[3]} & {0[4]}& {0[5]}& {0[6]}& {0[7]}\\\\'.format(cur.fetchone()))
cur.execute("""select (select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device != s2.device and (s1.cryptKey == s2.cryptKey or s1.cryptKey in (select item from hard_keys where type='key' and pkg == s1.pkg)) and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel=='https_crypt' and cryptKey!='' and  item in {0}),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device == s2.device and (s1.cryptKey == s2.cryptKey or s1.cryptKey in (select item from hard_keys where type='key' and pkg == s1.pkg)) and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel=='https_crypt' and cryptKey!='' and  item in {0}),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device != s2.device and (s1.cryptKey == s2.cryptKey or s1.cryptKey in (select item from hard_keys where type='key' and pkg == s1.pkg)) and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel=='http_crypt' and cryptKey!='' and  item in {0}),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device == s2.device and (s1.cryptKey == s2.cryptKey or s1.cryptKey in (select item from hard_keys where type='key' and pkg == s1.pkg)) and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel=='http_crypt' and cryptKey!='' and  item in {0}),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device != s2.device and (s1.cryptKey == s2.cryptKey or s1.cryptKey in (select item from hard_keys where type='key' and pkg == s1.pkg)) and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel like '%non_http%' and cryptKey!='' and  item in {0}),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device == s2.device and (s1.cryptKey == s2.cryptKey or s1.cryptKey in (select item from hard_keys where type='key' and pkg == s1.pkg)) and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel like '%non_http%' and cryptKey!='' and  item in {0}),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device != s2.device and (s1.cryptKey == s2.cryptKey or s1.cryptKey in (select item from hard_keys where type='key' and pkg == s1.pkg)) and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel like '%file_crypt%' and cryptKey!='' and  item in {0}),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device == s2.device and (s1.cryptKey == s2.cryptKey or s1.cryptKey in (select item from hard_keys where type='key' and pkg == s1.pkg)) and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel like '%file_crypt%' and cryptKey!='' and  item in {0});""".format(networkInfo))
fixed_keys+=('Network& {0[0]}& {0[1]}& {0[2]}& {0[3]} & {0[4]}& {0[5]}& {0[6]}& {0[7]}\\\\'.format(cur.fetchone()))
cur.execute("""select (select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device != s2.device and (s1.cryptKey == s2.cryptKey or s1.cryptKey in (select item from hard_keys where type='key' and pkg == s1.pkg)) and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel=='https_crypt' and cryptKey!='' and  item in {0}),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device == s2.device and (s1.cryptKey == s2.cryptKey or s1.cryptKey in (select item from hard_keys where type='key' and pkg == s1.pkg)) and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel=='https_crypt' and cryptKey!='' and  item in {0}),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device != s2.device and (s1.cryptKey == s2.cryptKey or s1.cryptKey in (select item from hard_keys where type='key' and pkg == s1.pkg)) and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel=='http_crypt' and cryptKey!='' and  item in {0}),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device == s2.device and (s1.cryptKey == s2.cryptKey or s1.cryptKey in (select item from hard_keys where type='key' and pkg == s1.pkg)) and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel=='http_crypt' and cryptKey!='' and  item in {0}),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device != s2.device and (s1.cryptKey == s2.cryptKey or s1.cryptKey in (select item from hard_keys where type='key' and pkg == s1.pkg)) and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel like '%non_http%' and cryptKey!='' and  item in {0}),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device == s2.device and (s1.cryptKey == s2.cryptKey or s1.cryptKey in (select item from hard_keys where type='key' and pkg == s1.pkg)) and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel like '%non_http%' and cryptKey!='' and  item in {0}),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device != s2.device and (s1.cryptKey == s2.cryptKey or s1.cryptKey in (select item from hard_keys where type='key' and pkg == s1.pkg)) and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel like '%file_crypt%' and cryptKey!='' and  item in {0}),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device == s2.device and (s1.cryptKey == s2.cryptKey or s1.cryptKey in (select item from hard_keys where type='key' and pkg == s1.pkg)) and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel like '%file_crypt%' and cryptKey!='' and  item in {0});""".format(contactInfo))
fixed_keys+=('Contact& {0[0]}& {0[1]}& {0[2]}& {0[3]} & {0[4]}& {0[5]}& {0[6]}& {0[7]}\\\\'.format(cur.fetchone()))
cur.execute("""select (select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device != s2.device and (s1.cryptKey == s2.cryptKey or s1.cryptKey in (select item from hard_keys where type='key' and pkg == s1.pkg)) and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel=='https_crypt' and cryptKey!='' and  (item like "%key|%" or item like "%iv|%")),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device == s2.device and (s1.cryptKey == s2.cryptKey or s1.cryptKey in (select item from hard_keys where type='key' and pkg == s1.pkg)) and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel=='https_crypt' and cryptKey!='' and  (item like "%key|%" or item like "%iv|%")),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device != s2.device and (s1.cryptKey == s2.cryptKey or s1.cryptKey in (select item from hard_keys where type='key' and pkg == s1.pkg)) and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel=='http_crypt' and cryptKey!='' and  (item like "%key|%" or item like "%iv|%")),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device == s2.device and (s1.cryptKey == s2.cryptKey or s1.cryptKey in (select item from hard_keys where type='key' and pkg == s1.pkg)) and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel=='http_crypt' and cryptKey!='' and  (item like "%key|%" or item like "%iv|%")),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device != s2.device and (s1.cryptKey == s2.cryptKey or s1.cryptKey in (select item from hard_keys where type='key' and pkg == s1.pkg)) and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel like '%non_http%' and cryptKey!='' and  (item like "%key|%" or item like "%iv|%")),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device == s2.device and (s1.cryptKey == s2.cryptKey or s1.cryptKey in (select item from hard_keys where type='key' and pkg == s1.pkg)) and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel like '%non_http%' and cryptKey!='' and  (item like "%key|%" or item like "%iv|%")),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device != s2.device and (s1.cryptKey == s2.cryptKey or s1.cryptKey in (select item from hard_keys where type='key' and pkg == s1.pkg)) and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel like '%file%' and cryptKey!='' and  (item like "%key|%" or item like "%iv|%")),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device == s2.device and (s1.cryptKey == s2.cryptKey or s1.cryptKey in (select item from hard_keys where type='key' and pkg == s1.pkg)) and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel like '%file_crypt%' and cryptKey!='' and (item like "%key|%" or item like "%iv|%"));""")
fixed_keys+=('Key Exchange& {0[0]}& {0[1]}& {0[2]}& {0[3]} & {0[4]}& {0[5]}& {0[6]}& {0[7]}\\\\'.format(cur.fetchone()))
cur.execute("""select (select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from raw_crypts where stage == 1) as s1, (SELECT * from raw_crypts where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device != s2.device and (s1.cryptKey == s2.cryptKey or s1.cryptKey in (select item from hard_keys where type='key' and pkg == s1.pkg)) and s1.addr==s2.addr and s1.is_send==s2.is_send) where alg not like '%RSA%' and origin=='https' and binwalk not null),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from raw_crypts where stage == 1) as s1, (SELECT * from raw_crypts where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device == s2.device and (s1.cryptKey == s2.cryptKey or s1.cryptKey in (select item from hard_keys where type='key' and pkg == s1.pkg)) and s1.addr==s2.addr and s1.is_send==s2.is_send) where alg not like '%RSA%' and origin=='https' and binwalk not null),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from raw_crypts where stage == 1) as s1, (SELECT * from raw_crypts where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device != s2.device and (s1.cryptKey == s2.cryptKey or s1.cryptKey in (select item from hard_keys where type='key' and pkg == s1.pkg)) and s1.addr==s2.addr and s1.is_send==s2.is_send) where alg not like '%RSA%' and origin=='http' and binwalk not null),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from raw_crypts where stage == 1) as s1, (SELECT * from raw_crypts where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device == s2.device and (s1.cryptKey == s2.cryptKey or s1.cryptKey in (select item from hard_keys where type='key' and pkg == s1.pkg)) and s1.addr==s2.addr and s1.is_send==s2.is_send) where alg not like '%RSA%' and origin=='http' and binwalk not null),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from raw_crypts where stage == 1) as s1, (SELECT * from raw_crypts where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device != s2.device and (s1.cryptKey == s2.cryptKey or s1.cryptKey in (select item from hard_keys where type='key' and pkg == s1.pkg)) and s1.addr==s2.addr and s1.is_send==s2.is_send) where alg not like '%RSA%' and origin=='non_http' and binwalk not null),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from raw_crypts where stage == 1) as s1, (SELECT * from raw_crypts where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device == s2.device and (s1.cryptKey == s2.cryptKey or s1.cryptKey in (select item from hard_keys where type='key' and pkg == s1.pkg)) and s1.addr==s2.addr and s1.is_send==s2.is_send) where alg not like '%RSA%' and origin=='non_http' and binwalk not null),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from raw_crypts where stage == 1) as s1, (SELECT * from raw_crypts where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device != s2.device and (s1.cryptKey == s2.cryptKey or s1.cryptKey in (select item from hard_keys where type='key' and pkg == s1.pkg)) and s1.addr==s2.addr and s1.is_send==s2.is_send) where alg not like '%RSA%' and origin=='file_crypt' and binwalk not null),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from raw_crypts where stage == 1) as s1, (SELECT * from raw_crypts where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device == s2.device and (s1.cryptKey == s2.cryptKey or s1.cryptKey in (select item from hard_keys where type='key' and pkg == s1.pkg)) and s1.addr==s2.addr and s1.is_send==s2.is_send) where alg not like '%RSA%' and origin=='file_crypt' and binwalk not null)""")
fixed_keys+=('Files& {0[0]}& {0[1]}& {0[2]}& {0[3]} & {0[4]}& {0[5]}& {0[6]}& {0[7]}\\\\'.format(cur.fetchone()))
print('\\newcommand{\VarTableAppsFixedKeys}{'+fixed_keys+"}")


# cur.execute("""select (select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device != s2.device and s1.cryptKey == s2.cryptKey and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel=='https_crypt' and cryptKey!='' and  item in {0}),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device == s2.device and s1.cryptKey == s2.cryptKey and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel=='https_crypt' and cryptKey!='' and  item in {0}),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device != s2.device and s1.cryptKey == s2.cryptKey and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel=='http_crypt' and cryptKey!='' and  item in {0}),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device == s2.device and s1.cryptKey == s2.cryptKey and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel=='http_crypt' and cryptKey!='' and  item in {0}),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device != s2.device and s1.cryptKey == s2.cryptKey and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel like '%non_http%' and cryptKey!='' and  item in {0}),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device == s2.device and s1.cryptKey == s2.cryptKey and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel like '%non_http%' and cryptKey!='' and  item in {0}),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device != s2.device and s1.cryptKey == s2.cryptKey and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel like '%file%' and cryptKey!='' and  item in {0}),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device == s2.device and s1.cryptKey == s2.cryptKey and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel like '%file%' and cryptKey!='' and  item in {0});""".format(deviceInfo))
# fixed_keys+=('Tracking& {0[0]}& {0[1]}& {0[2]}& {0[3]} & {0[4]}& {0[5]}& {0[6]}& {0[7]}\\\\'.format(cur.fetchone()))
# cur.execute("""select (select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device != s2.device and s1.cryptKey == s2.cryptKey and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel=='https_crypt' and cryptKey!='' and  item in {0}),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device == s2.device and s1.cryptKey == s2.cryptKey and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel=='https_crypt' and cryptKey!='' and  item in {0}),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device != s2.device and s1.cryptKey == s2.cryptKey and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel=='http_crypt' and cryptKey!='' and  item in {0}),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device == s2.device and s1.cryptKey == s2.cryptKey and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel=='http_crypt' and cryptKey!='' and  item in {0}),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device != s2.device and s1.cryptKey == s2.cryptKey and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel like '%non_http%' and cryptKey!='' and  item in {0}),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device == s2.device and s1.cryptKey == s2.cryptKey and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel like '%non_http%' and cryptKey!='' and  item in {0}),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device != s2.device and s1.cryptKey == s2.cryptKey and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel like '%file%' and cryptKey!='' and  item in {0}),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device == s2.device and s1.cryptKey == s2.cryptKey and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel like '%file%' and cryptKey!='' and  item in {0});""".format(interactionInfo))
# fixed_keys+=('Inputs& {0[0]}& {0[1]}& {0[2]}& {0[3]} & {0[4]}& {0[5]}& {0[6]}& {0[7]}\\\\'.format(cur.fetchone()))
# cur.execute("""select (select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device != s2.device and s1.cryptKey == s2.cryptKey and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel=='https_crypt' and cryptKey!='' and  item in {0}),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device == s2.device and s1.cryptKey == s2.cryptKey and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel=='https_crypt' and cryptKey!='' and  item in {0}),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device != s2.device and s1.cryptKey == s2.cryptKey and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel=='http_crypt' and cryptKey!='' and  item in {0}),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device == s2.device and s1.cryptKey == s2.cryptKey and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel=='http_crypt' and cryptKey!='' and  item in {0}),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device != s2.device and s1.cryptKey == s2.cryptKey and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel like '%non_http%' and cryptKey!='' and  item in {0}),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device == s2.device and s1.cryptKey == s2.cryptKey and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel like '%non_http%' and cryptKey!='' and  item in {0}),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device != s2.device and s1.cryptKey == s2.cryptKey and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel like '%file%' and cryptKey!='' and  item in {0}),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device == s2.device and s1.cryptKey == s2.cryptKey and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel like '%file%' and cryptKey!='' and  item in {0});""".format(locationInfo))
# fixed_keys+=('Geolocation& {0[0]}& {0[1]}& {0[2]}& {0[3]} & {0[4]}& {0[5]}& {0[6]}& {0[7]}\\\\'.format(cur.fetchone()))
# cur.execute("""select (select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device != s2.device and s1.cryptKey == s2.cryptKey and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel=='https_crypt' and cryptKey!='' and  item in {0}),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device == s2.device and s1.cryptKey == s2.cryptKey and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel=='https_crypt' and cryptKey!='' and  item in {0}),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device != s2.device and s1.cryptKey == s2.cryptKey and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel=='http_crypt' and cryptKey!='' and  item in {0}),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device == s2.device and s1.cryptKey == s2.cryptKey and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel=='http_crypt' and cryptKey!='' and  item in {0}),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device != s2.device and s1.cryptKey == s2.cryptKey and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel like '%non_http%' and cryptKey!='' and  item in {0}),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device == s2.device and s1.cryptKey == s2.cryptKey and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel like '%non_http%' and cryptKey!='' and  item in {0}),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device != s2.device and s1.cryptKey == s2.cryptKey and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel like '%file%' and cryptKey!='' and  item in {0}),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device == s2.device and s1.cryptKey == s2.cryptKey and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel like '%file%' and cryptKey!='' and  item in {0});""".format(networkInfo))
# fixed_keys+=('Network& {0[0]}& {0[1]}& {0[2]}& {0[3]} & {0[4]}& {0[5]}& {0[6]}& {0[7]}\\\\'.format(cur.fetchone()))
# cur.execute("""select (select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device != s2.device and s1.cryptKey == s2.cryptKey and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel=='https_crypt' and cryptKey!='' and  item in {0}),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device == s2.device and s1.cryptKey == s2.cryptKey and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel=='https_crypt' and cryptKey!='' and  item in {0}),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device != s2.device and s1.cryptKey == s2.cryptKey and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel=='http_crypt' and cryptKey!='' and  item in {0}),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device == s2.device and s1.cryptKey == s2.cryptKey and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel=='http_crypt' and cryptKey!='' and  item in {0}),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device != s2.device and s1.cryptKey == s2.cryptKey and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel like '%non_http%' and cryptKey!='' and  item in {0}),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device == s2.device and s1.cryptKey == s2.cryptKey and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel like '%non_http%' and cryptKey!='' and  item in {0}),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device != s2.device and s1.cryptKey == s2.cryptKey and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel like '%file%' and cryptKey!='' and  item in {0}),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device == s2.device and s1.cryptKey == s2.cryptKey and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel like '%file%' and cryptKey!='' and  item in {0});""".format(contactInfo))
# fixed_keys+=('Contact& {0[0]}& {0[1]}& {0[2]}& {0[3]} & {0[4]}& {0[5]}& {0[6]}& {0[7]}\\\\'.format(cur.fetchone()))
# cur.execute("""select (select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device != s2.device and s1.cryptKey == s2.cryptKey and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel=='https_crypt' and cryptKey!='' and  (item like "%key|%" or item like "%iv|%")),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device == s2.device and s1.cryptKey == s2.cryptKey and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel=='https_crypt' and cryptKey!='' and  (item like "%key|%" or item like "%iv|%")),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device != s2.device and s1.cryptKey == s2.cryptKey and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel=='http_crypt' and cryptKey!='' and  (item like "%key|%" or item like "%iv|%")),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device == s2.device and s1.cryptKey == s2.cryptKey and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel=='http_crypt' and cryptKey!='' and  (item like "%key|%" or item like "%iv|%")),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device != s2.device and s1.cryptKey == s2.cryptKey and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel like '%non_http%' and cryptKey!='' and  (item like "%key|%" or item like "%iv|%")),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device == s2.device and s1.cryptKey == s2.cryptKey and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel like '%non_http%' and cryptKey!='' and  (item like "%key|%" or item like "%iv|%")),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device != s2.device and s1.cryptKey == s2.cryptKey and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel like '%file%' and cryptKey!='' and  (item like "%key|%" or item like "%iv|%")),(select count(DISTINCT pkg) from (select DISTINCT s1.* from (SELECT * from leaks where stage == 1) as s1, (SELECT * from leaks where stage == 2) as s2 where s1.pkg == s2.pkg and s1.device == s2.device and s1.cryptKey == s2.cryptKey and s1.addr==s2.addr and s1.send==s2.send) where alg not like '%RSA%' and channel like '%file%' and cryptKey!='' and (item like "%key|%" or item like "%iv|%"));""")
# fixed_keys+=('Key Exchange& {0[0]}& {0[1]}& {0[2]}& {0[3]} & {0[4]}& {0[5]}& {0[6]}& {0[7]}\\\\'.format(cur.fetchone()))
# print('\\newcommand{\VarTableAppsFixedKeys}{'+fixed_keys+"}")


weak_alg_usage=""
for name, alg_cond in weak_alg_hash.items():
    cur.execute("""select (select count(distinct pkg) from leaks where item in {1} and {0}),(select count(distinct pkg) from leaks where item in {2} and {0}),(select count(distinct pkg) from leaks where item in {3} and {0}),(select count(distinct pkg) from leaks where item in {4} and {0}),(select count(distinct pkg) from leaks where item in {5} and {0}),(select count(distinct pkg) from raw_crypts where binwalk not null and {0}),(select count(distinct pkg) from leaks where (item like "%key|%" or item like "%iv|%") and {0});""".format(alg_cond,deviceInfo,interactionInfo,locationInfo,networkInfo,contactInfo))
    weak_alg_usage+=('{1}& {0[0]}& {0[1]}& {0[2]}& {0[3]}& {0[4]}& {0[5]}& {0[6]}\\\\'.format(cur.fetchone(),name))
print('\\newcommand{\VarTableAppsWeakCipherUsage}{'+weak_alg_usage+"}")

con.close()
